language: python
dist: xenial

env:
  global:
    - COVERALLS_PARALLEL=true
  matrix:
    - TEST_FILE="tests/test_seq2seq/"
    - TEST_FILE="tests/test_labeling/test_bi_gru_model.py tests/test_labeling/test_bi_lstm_model.py tests/test_labeling/test_cnn_lstm_model.py"
    - TEST_FILE="tests/test_labeling/test_bi_gru_crf_model.py tests/test_labeling/test_bi_lstm_crf_model.py"
    - TEST_FILE="tests/test_classification/"
    - TEST_FILE="tests/test_embeddings/"
    - TEST_FILE="tests/test_processor/"
    - TEST_FILE="tests/test_corpus.py tests/test_utils.py tests/test_tokenizers.py"
#    - TF_VERSION="2.1.0" TEST_FILE="tests/test_seq2seq/"
#    - TF_VERSION="2.1.0" TEST_FILE="tests/test_labeling/test_bi_gru_model.py tests/test_labeling/test_bi_lstm_model.py tests/test_labeling/test_cnn_lstm_model.py"
#    - TF_VERSION="2.1.0" TEST_FILE="tests/test_labeling/test_bi_gru_crf_model.py tests/test_labeling/test_bi_lstm_crf_model.py"
#    - TF_VERSION="2.1.0" TEST_FILE="tests/test_classification/"
#    - TF_VERSION="2.1.0" TEST_FILE="tests/test_embeddings/"
#    - TF_VERSION="2.1.0" TEST_FILE="tests/test_processor/"
#    - TF_VERSION="2.1.0" TEST_FILE="tests/test_corpus.py tests/test_utils.py tests/test_tokenizers.py"
#
#    - TF_VERSION="2.2.0" TEST_FILE="tests/test_seq2seq/"
#    - TF_VERSION="2.2.0" TEST_FILE="tests/test_labeling/test_bi_gru_model.py tests/test_labeling/test_bi_lstm_model.py tests/test_labeling/test_cnn_lstm_model.py"
#    - TF_VERSION="2.2.0" TEST_FILE="tests/test_labeling/test_bi_gru_crf_model.py tests/test_labeling/test_bi_lstm_crf_model.py"
#    - TF_VERSION="2.2.0" TEST_FILE="tests/test_classification/"
#    - TF_VERSION="2.2.0" TEST_FILE="tests/test_embeddings/"
#    - TF_VERSION="2.2.0" TEST_FILE="tests/test_processor/"
#    - TF_VERSION="2.2.0" TEST_FILE="tests/test_corpus.py tests/test_utils.py tests/test_tokenizers.py"
#
#    - TF_VERSION="2.3.0" TEST_FILE="tests/test_seq2seq/"
#    - TF_VERSION="2.3.0" TEST_FILE="tests/test_labeling/test_bi_gru_model.py tests/test_labeling/test_bi_lstm_model.py tests/test_labeling/test_cnn_lstm_model.py"
#    - TF_VERSION="2.3.0" TEST_FILE="tests/test_labeling/test_bi_gru_crf_model.py tests/test_labeling/test_bi_lstm_crf_model.py"
#    - TF_VERSION="2.3.0" TEST_FILE="tests/test_classification/"
#    - TF_VERSION="2.3.0" TEST_FILE="tests/test_embeddings/"
#    - TF_VERSION="2.3.0" TEST_FILE="tests/test_processor/"
#    - TF_VERSION="2.3.0" TEST_FILE="tests/test_corpus.py tests/test_utils.py tests/test_tokenizers.py"

python:
  - "3.6"

cache: pip

before_install:
  - export BOTO_CONFIG=/dev/null

stages:
  - Lint
  - "Test 2.3"
  - "Test 2.2"
  - "Test 2.1"

after_script:
  - coveralls

notifications:
  webhooks: https://coveralls.io/webhook


jobs:
  include:
    - stage: Lint
      python: "3.7"
      install:
        - pip install -r requirements.dev.txt
      script:
        - sh ./scripts/lint.sh
    - stage: "Test 2.3"
      name: "Tensorflow 2.3.0"
      script:
        - pip install "tensorflow==2.3.0"
        - pip install -r requirements.dev.txt
        - pip install -r requirements.txt
        - python -c "import kashgari;print(f'kashgari version {kashgari.__version__}')"
        - pytest --doctest-modules --junitxml=test-reports/junit.xml --cov=kashgari --cov-report=xml:coverage.xml --cov-report term --cov-report=html:htmlcov --cov-config .coveragerc $TEST_FILE
    - stage: "Test 2.2"
      name: "Tensorflow 2.2.0"
      if: type = pull_request
      script:
        - pip install "tensorflow==2.2.0"
        - pip install -r requirements.dev.txt
        - pip install -r requirements.txt
        - python -c "import kashgari;print(f'kashgari version {kashgari.__version__}')"
        - pytest --doctest-modules --junitxml=test-reports/junit.xml --cov=kashgari --cov-report=xml:coverage.xml --cov-report term --cov-report=html:htmlcov --cov-config .coveragerc $TEST_FILE
    - stage: "Test 2.1"
      name: "Tensorflow 2.1.0"
      if: type = pull_request
      script:
        - pip install "tensorflow==2.2.0"
        - pip install "tensorflow_addons<0.10.0"
        - pip install -r requirements.dev.txt
        - pip install -r requirements.txt
        - python -c "import kashgari;print(f'kashgari version {kashgari.__version__}')"
        - pytest --doctest-modules --junitxml=test-reports/junit.xml --cov=kashgari --cov-report=xml:coverage.xml --cov-report term --cov-report=html:htmlcov --cov-config .coveragerc $TEST_FILE
